apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  namespace: elasticsearch
spec:
  selector:
    matchLabels:
      app: elasticsearch-master
  serviceName: elasticsearch-master-headless
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: elasticsearch-master
    spec:
      terminationGracePeriodSeconds: 60
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - elasticsearch-master
                namespaces:
                  - elasticsearch
      initContainers:
        - name: sysctl
          image: ubuntu:22.04
          command:
            - "/bin/bash"
            - "-c"
            - |
              # 临时修改宿主机内核配置 ( es 启动要求的内核参数值 )
              sysctl -w vm.max_map_count=262144
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 100m
              memory: 100Mi
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2-amd64
          env:
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: node.roles
              value: data,master
            - name: TAKE_FILE_OWNERSHIP
              value: "true"
          envFrom:
            - configMapRef:
                name: elastic-env
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 3000m
              memory: 2.5Gi
          startupProbe:
            httpGet:
              path: /
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 60
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          ports:
            - name: elastic-http
              protocol: TCP
              containerPort: 9200
            - name: elastic-cluster
              protocol: TCP
              containerPort: 9300
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
            - name: elastic-data
              mountPath: /usr/share/elasticsearch/data
            - name: elastic-logs
              mountPath: /usr/share/elasticsearch/logs
      volumes:
        # 使用中国时区
        - name: localtime
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
  volumeClaimTemplates:
    - metadata:
        name: elastic-data
      spec:
        accessModes: 
          - "ReadWriteOnce"
        # 使用默认存储类
        # storageClassName: "my-storage-class"
        resources:
          requests:
            storage: 50Gi
    - metadata:
        name: elastic-logs
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
